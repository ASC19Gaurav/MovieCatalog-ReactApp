[
  {
    "ContainingType": "WorkshopAPI.Controllers.SessionController",
    "Method": "GetAll",
    "RelativePath": "api/Session",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WorkshopAPI.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[WorkshopAPI.WeatherForecast, WorkshopAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  },
  {
    "ContainingType": "WorkshopAPI.Controllers.WorkshopsController",
    "Method": "GetWorkshops",
    "RelativePath": "Workshops",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filterOn",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "filterQuery",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "sortBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "isAscending",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "_embed",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WorkshopAPI.Controllers.WorkshopsController",
    "Method": "Create",
    "RelativePath": "Workshops",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addWorkshopRequestDto",
        "Type": "WorkshopAPI.Model.DTO.AddWorkshopRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WorkshopAPI.Controllers.WorkshopsController",
    "Method": "GetById",
    "RelativePath": "Workshops/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WorkshopAPI.Controllers.WorkshopsController",
    "Method": "Update",
    "RelativePath": "Workshops/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateWorkshopRequestDto",
        "Type": "WorkshopAPI.Model.DTO.UpdateWorkshopRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WorkshopAPI.Controllers.WorkshopsController",
    "Method": "Delete",
    "RelativePath": "Workshops/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]